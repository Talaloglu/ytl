-- Create tables to support provider-ID and file-signature based matching
-- These tables are read and written by the Edge Function video_hosting_worker

-- 1) File signature table
create table if not exists public.movie_file_signatures (
  id            bigint generated by default as identity primary key,
  movie_id      text not null,
  size_bytes    bigint,
  head_sha256   text,
  tail_sha256   text,
  created_at    timestamptz not null default now()
);

-- Unique combination across all three keys; NULLs are considered distinct in UNIQUE indexes
create unique index if not exists uniq_movie_file_signature
  on public.movie_file_signatures (size_bytes, head_sha256, tail_sha256);

-- Helpful lookup indexes
create index if not exists idx_mfs_head on public.movie_file_signatures (head_sha256);
create index if not exists idx_mfs_tail on public.movie_file_signatures (tail_sha256);
create index if not exists idx_mfs_size on public.movie_file_signatures (size_bytes);

-- 2) External provider ID -> movie mapping
create table if not exists public.external_stream_map (
  id             bigint generated by default as identity primary key,
  provider_host  text not null,
  provider_id    text not null,
  movie_id       text not null,
  created_at     timestamptz not null default now()
);

-- Prevent duplicate mapping for the same provider key
create unique index if not exists uniq_external_stream_map_provider
  on public.external_stream_map (provider_host, provider_id);

-- Optional helpful index for reverse lookups
create index if not exists idx_esm_movie on public.external_stream_map (movie_id);
